GitKraken
    - always pull before working on anything! We may be able to set an auto-fetch in gitkraken
    - branching strategy:
        - branch off of dev, which will be merged into master every time we feel like code is finalized enough to be in the final project
            - obviously still changeable
        - branch off of dev for changes to code
            - all changes to code require a branch
        - never work on a branch that has already been merged into the dev branch
        - use good names for branches and commits
            - you can sort branches into files by using a '/' in the name of the branch
                - e.x: 'controls/mouse changes' might be an alright name
                - we could use an agile method to assign tasks to ourselves every week or two, and that will allow for easier names.
                    - this will be hard without experience
            - we can create catagories
                - these can correspond to dev phase, date, or what is being worked on
        - pull requests should be created, with the other person being assigned as the reviewer
            - they will approve it (if they want!) and complete the merge
        
code editor
    - you wanted to use sublime, I will be using vs code
        - if we run into problems building we may want to switch to visual studio, but im not sure how good it is for osx
    - I will be using an extension called "Beautify" for styling
        - if you get it we will have consistent styling, or I can style everything, it's not a huge deal
        - https://beautifier.io/
            - many online beautifiers :)

NPM 
    - i've never used it before, so I will have to look into it
    - package manager used alongside Node.js, will be useful for any utilities we want to implement but ultimately probably not used much
        - Not pushing any node modules
    - `npm init` used to create a base node.js application, creating a package.json as well
        - also going to be used for react I believe
        - express and socket.io also used in this for connections
            - Not sure if socket.io is best, I think there were better out there
        - SOCKET.IO: https://socket.io/
            - Quick bridge between client and server
        - REACT JS: https://reactjs.org/
            - Frontend tool for live updating, quick refreshes
        - EXPRESS: https://expressjs.com/
            - Helps with coding a html app

Node.js
    - Base of online js framework, uses NPM
    - When installed, need to fix up gitignore to remove any packages and our package locks
    - TO INITALIZE:
        > npm init (makes packages and basic node manuals)
        > update package with our own data (if not done in init)
        > npm install (express, react, socket.io) --save (one at a time)
        > start putting backend in server section and frontend in client section
    - Use https://github.com/loparcog/multiplayer-js as reference
        - Do not need to push node_modules, can be rebuilt from package I believe